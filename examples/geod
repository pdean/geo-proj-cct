#!/usr/bin/env perl
# vim:ft=perl:sts=4:sw=4:et

use v5.36;

use aliased 'Geo::Proj::CCT';

my $cs = "+proj=longlat +ellps=GRS80";
my $p  = CCT->create($cs);
say $p->definition();

# example in gda2020 tech manual page 51
my $aref = [ dec( 144, 25, 29.5244 ), dec( -37, 57, 3.7203 ) ];
my $bref = [ dec( 143, 55, 35.3839 ), dec( -37, 39, 10.1561 ) ];

my ( $dist, $fwd, $rev ) = @{ $p->geod( $aref, $bref ) };

say sprintf( "%14.3f m",            $dist );
say sprintf( "%4d째 %02d' %05.2f\"", dms($fwd) );
say sprintf( "%4d째 %02d' %05.2f\"", dms($rev) );
say sprintf( "%4d째 %02d' %05.2f\"", dms( mod( $fwd,       360 ) ) );
say sprintf( "%4d째 %02d' %05.2f\"", dms( mod( $rev + 180, 360 ) ) );

say "chcp 65001";
say "if degree not shown on windows";

# subs

use POSIX qw(floor copysign);

sub mod {
    my ( $x, $y ) = @_;
    return $x - floor( $x / $y ) * $y;
}

sub dec {
    my ( $deg, $min, $sec ) = @_;
    $min = copysign( $min, $deg );
    $sec = copysign( $sec, $deg );
    return $deg + ( $min + $sec / 60 ) / 60;
}

sub dms {
    my ($dec) = @_;
    my $d     = abs($dec);
    my $deg   = floor($d);
    my $m     = ( $d - $deg ) * 60;
    my $min   = floor($m);
    my $sec   = ( $m - $min ) * 60;
    return ( copysign( $deg, $dec ), $min, $sec );
}
